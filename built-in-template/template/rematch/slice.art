import { createModel } from "@rematch/core";
import { store } from "@/store";
import { RootModel } from ".";

interface StateI {
  count: number;
}

const INIT_STATE: StateI =  {
  count: 0
};

const {{componentName}} = createModel<RootModel>()({
  state: INIT_STATE,

  reducers: {
    increment(state: StateI, payload: StateI) {
      return {
        count: state.count + payload.count
      };
    },
    updateStoreData: (state: StateI, payload: Partial<StateI>): StateI => ({
      ...state,
      ...payload,
    }),
  },

  effects: {
    async incrementAsync(payload: StateI) {
      const { increment } = store.dispatch.{{componentName}};
      await new Promise((resolve) => setTimeout(resolve, 1000));
      increment(payload);
    },
  },
});

export { {{componentName}} };